
# to tell travis ci , need sudo user right
sudo: required
services:
  # travis will create a docker container
  - docker

before_install:
  # -t will tag image with tagname wangyan100/docker-react
  - docker build -t wangyan100/react-test -f ./client/Dockerfile.dev ./client

# script section is the script for running test
script:
  # -- --converage is the trick to let npm run test to return result with test converage report, otherwise it will hang there wait for input from user
  - docker run -e CI=true wangyan100/react-test npm run test -- --coverage

after_success:
  - docker build -t wangyan100/multi-client  ./client
  - docker build -t wangyan100/multi-nginx   ./nginx
  - docker build -t wangyan100/multi-server   ./server
  - docker build -t wangyan100/multi-worker   ./worker
  # login docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker push wangyan100/multi-client
  - docker push wangyan100/multi-nginx
  - docker push wangyan100/multi-server
  - docker push wangyan100/multi-worker
# login docker CLI

deploy:
  provider: elasticbeanstalk
  region: "us-east-2"
  app: multi-docker
  env: MultiDocker-env
  bucket_name: "elasticbeanstalk-us-east-2-235134183621"
  bucket_path: docker-multi
  on:
    branch: master
  access_key_id:
    secure: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY


